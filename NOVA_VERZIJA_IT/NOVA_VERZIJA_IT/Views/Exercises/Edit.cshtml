@model NOVA_VERZIJA_IT.Models.Exercise

@{
    ViewBag.Title = "Edit";
}

<style>

    .form-select-2 {
        width: 100%; 
        height: 100px; 
        padding: 5px; 
        border-radius: 4px; 
        border: 1px solid #ccc; 
        background-color: #fff;
        font-size: 16px; 
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); 
    }

        .form-select-2 option {
            padding: 10px; /* Space inside options */
        }

    .muscle-groups-display {
        cursor: pointer;
        border: 1px solid #ccc;
        padding: 10px;
        border-radius: 4px;
        background-color: #f9f9f9;
        display: inline-block;
        width: 100%;
        text-align: left;
    }


    .kopce {
        margin-left: 0px;
        border-radius: 4px;
    }

    .btn-outline-success {
        background-color: transparent;
        color: #5cb85c;
        border: 1px solid #5cb85c;
    }


        .btn-outline-success:hover {
            background-color: #5cb85c;
            color: #fff;
            transform: translateY(-2px);
        }



    .muscle-group-container {
        margin-bottom: 20px;
    }

    .muscle-group-label {
        margin-bottom: 10px;
        display: block;
    }

    .muscle-group-select-wrapper {
        width: 60%;
    }

    .muscle-group-select {
        width: 100%;
        padding: 5px;
        font-size: 14px; 
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        border-radius: 4px;
        color: #495057;
        cursor: pointer;
        height: 50px; 
        transition: border-color 0.3s ease;
    }

        .muscle-group-select:focus,
        .muscle-group-select.active {
            border-color: #80bdff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .muscle-group-options {
        display: none;
        position: absolute;
        width: 100%;
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 4px;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1000;
        list-style: none;
    }

        .muscle-group-options li {
            padding: 10px;
            font-size: 1em;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

            .muscle-group-options li:hover {
                background-color: #e9ecef;
            }

    .muscle-group-validation {
        margin-top: 10px;
        font-size: 0.9em;
        color: #dc3545;
    }

    .muscle-group-label{

    }

</style>

<h2 class="text-center">Edit</h2>

<div class="container d-flex justify-content-center align-items-center ">

    <div class="col-md-6">

        <div class="card mt-5 border border-dark">

            <div class="card-header">
                <h2>Edit an exercise</h2>
            </div>

            <div class="card-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="form-group justify-content-center">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownListFor(model => model.Category,
                                   new SelectList(new[] {
                                       "Weightlifting",
                                       "Cardio/Endurance",
                                       "Dumbbells/Isolation",
                                       "Calisthenics/Bodyweight",
                                        "Olympic Weightlifting",
                                        "Machine",
                                       "Kettlebells"}),

                                   "Select a category",

                                   new { @class = "form-select" })

                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

                        </div>


                        <div class="form-group">
                            <label for="muscleGroups" class="muscle-group-label">Muscle Groups</label>
                            <div class="muscle-group-select-wrapper">
                                <select id="muscleGroups" name="muscleGroups" class="form-select-2" multiple>
                                    <option value="Back" @(Model.muscleGroups.Contains("Back") ? "selected" : "")>Back</option>
                                    <option value="Chest" @(Model.muscleGroups.Contains("Chest") ? "selected" : "")>Chest</option>
                                    <option value="Shoulders" @(Model.muscleGroups.Contains("Shoulders") ? "selected" : "")>Shoulders</option>
                                    <option value="Legs" @(Model.muscleGroups.Contains("Legs") ? "selected" : "")>Legs</option>
                                    <option value="Triceps" @(Model.muscleGroups.Contains("Triceps") ? "selected" : "")>Triceps</option>
                                    <option value="Biceps" @(Model.muscleGroups.Contains("Biceps") ? "selected" : "")>Biceps</option>
                                    <option value="Abs" @(Model.muscleGroups.Contains("Abs") ? "selected" : "")>Abs</option>
                                    <option value="Forearms" @(Model.muscleGroups.Contains("Forearms") ? "selected" : "")>Forearms</option>
                                    <option value="Traps" @(Model.muscleGroups.Contains("Traps") ? "selected" : "")>Traps</option>
                                    <option value="Cardio" @(Model.muscleGroups.Contains("Cardio") ? "selected" : "")>Cardio</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-primary kopce" />
                        </div>
                    </div>
                  }

                    <div>
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-success" })
                    </div>

            </div>

        </div>

    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
